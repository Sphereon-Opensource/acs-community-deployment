# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 12GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# See Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D).
# If the container memory is not explicitly set then the flags above will set the max heap default to 1/4 of the container's memory, which may not be ideal.
# For performance tuning, assign the container memory and give a percentage of it to the JVM.

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:
  # traefik is used as front-end proxy because it will handle Letsencrypt certificates for the endpoints,
  #   reducing complexity concerning self-signed certificates. On port 8080 it will show a nice web portal showing how everything is connected.
  traefik:
    image: traefik:v2.2
    command: [
      "--api.insecure=true",
      "--providers.docker",
      "--providers.docker.exposedbydefault=false",
      "--entrypoints.websecure.address=:443",
      "--certificatesresolvers.myresolver.acme.tlschallenge=true",
      "--certificatesresolvers.myresolver.acme.email=dev@sphereon.com",
      "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json",
      "--log.filePath=/logs/traefik.log",
      "--log.level=DEBUG",
    ]
    ports:
      # The HTTP/HTTPS ports
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "./logs:/logs"
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  # traefik-cas is a helper module that implements the cas routing
  traefik-cas:
    image: 718258401100.dkr.ecr.eu-west-1.amazonaws.com/sphereon-alfresco/traefik-cas
    environment:
      - CAS_BASE_URL=https://alfresco-triall.dev.sphereon.com/cas
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik-cas.loadbalancer.server.port=4188"

  # Compared to the original repo, most JAVA_OPTS entries have been moved to ./config/alfresco/alfresco-global.properties
  alfresco:
    image: alfresco/alfresco-content-repository-community:6.2.0-ga
    mem_limit: 1500m
    environment:
      JAVA_OPTS: "
                -Ddeployment.method=DOCKER_COMPOSE
                -Xms1500m -Xmx1500m
                "
    ports:
      - 8080
    volumes:
      - ./config/alfresco/alfresco-global.properties:/usr/local/tomcat/shared/classes/alfresco-global.properties
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.alfresco.loadbalancer.server.port=8080"
      - "traefik.http.routers.alfresco.rule=Host(`alfresco-triall.dev.sphereon.com`) && PathPrefix(`/alfresco`)"
      - "traefik.http.routers.alfresco.entrypoints=websecure"
      - "traefik.http.routers.alfresco.tls.certresolver=myresolver"
      - "traefik.http.middlewares.cas-auth.forwardauth.Address=http://traefik-cas:4188"
      - "traefik.http.middlewares.cas-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
      - "traefik.http.routers.alfresco.middlewares=cas-auth,redirect-https"
  # TODO Add RegEx to filter SOLR API's

  alfresco-pdf-renderer:
    image: alfresco/alfresco-pdf-renderer:2.1.1
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8090

  imagemagick:
    image: alfresco/alfresco-imagemagick:2.1.1
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8090

  libreoffice:
    image: alfresco/alfresco-libreoffice:2.1.1
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8090

  tika:
    image: alfresco/alfresco-tika:2.1.1
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8090

  transform-misc:
    image: alfresco/alfresco-transform-misc:2.1.1
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8090

  share:
    image: alfresco/alfresco-share:6.2.0
    mem_limit: 1g
    environment:
      REPO_HOST: "alfresco"
      REPO_PORT: "8080"
      JAVA_OPTS: "
                -Xms500m
                -Xmx500m
                -Dalfresco.host=alfresco-triall.dev.sphereon.com
                -Dalfresco.context=alfresco
                -Dalfresco.protocol=https
                "
    ports:
      - 8080
    volumes:
      - ./config/alfresco/substituter.sh:/usr/local/tomcat/shared/classes/alfresco/substituter.sh
      - ./config/alfresco/share-config-custom.xml:/usr/local/tomcat/shared/classes/alfresco/web-extension/share-config-custom.xml
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.share.loadbalancer.server.port=8080"
      - "traefik.http.routers.share.rule=Host(`alfresco-triall.dev.sphereon.com`) && PathPrefix(`/share`)"
      - "traefik.http.routers.share.entrypoints=websecure"
      - "traefik.http.routers.share.tls.certresolver=myresolver"
      - "traefik.http.middlewares.cas-auth.forwardauth.Address=http://traefik-cas:4188"
      - "traefik.http.middlewares.cas-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
      - "traefik.http.routers.share.middlewares=cas-auth,redirect-https"

  postgres:
    image: postgres:11.4
    mem_limit: 512m
    environment:
      - POSTGRES_PASSWORD=alfresco
      - POSTGRES_USER=alfresco
      - POSTGRES_DB=alfresco
    command: postgres -c max_connections=300 -c log_min_messages=LOG
    ports:
      - 5432

  solr6:
    image: alfresco/alfresco-search-services:1.4.0
    mem_limit: 2g
    environment:
      #Solr needs to know how to register itself with Alfresco
      - SOLR_ALFRESCO_HOST=alfresco
      - SOLR_ALFRESCO_PORT=8080
      #Alfresco needs to know how to call solr
      - SOLR_SOLR_HOST=solr6
      - SOLR_SOLR_PORT=8983
      #Create the default alfresco and archive cores
      - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
      #HTTP by default
      - ALFRESCO_SECURE_COMMS=none
      - "SOLR_JAVA_MEM=-Xms2g -Xmx2g"
    ports:
      - 8983 #Browser port

  activemq:
    image: alfresco/alfresco-activemq:5.15.8
    mem_limit: 1g
    ports:
      - 8161 # Web Console
      - 5672 # AMQP
      - 61616 # OpenWire
      - 61613 # STOMP

  mongodb:
    image: mongo:latest
    mem_limit: 512m
    ports:
      - 27017
    volumes:
      - mongodb_data_container:/data/db

  # A CAS server from Apereo with an did-auth overlay compiled into it.
  apereo-cas:
    image: 718258401100.dkr.ecr.eu-west-1.amazonaws.com/sphereon-alfresco/apereo-cas
    mem_limit: 1g
    ports:
      - 8090
      - 8443:8443
    volumes:
      - "./config/cas/etc-config:/etc/cas"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.apereo-cas.loadbalancer.server.port=8090"
      - "traefik.http.routers.apereo-cas.rule=Host(`alfresco-triall.dev.sphereon.com`) && PathPrefix(`/cas`)"
      - "traefik.http.routers.apereo-cas.entrypoints=websecure"
      - "traefik.http.routers.apereo-cas.tls.certresolver=myresolver"
      - "traefik.http.middlewares.apereo-cas.redirectscheme.scheme=https"
      - "traefik.http.middlewares.apereo-cas.redirectscheme.permanent=true"

  # A microservice that holds the DID account mappings. It uses MongoDB as database
  did-mapping-ms:
    image: 718258401100.dkr.ecr.eu-west-1.amazonaws.com/sphereon-alfresco/did-mapping-ms
    mem_limit: 512m
    ports:
      - 8080
    environment:
      JAVA_OPTIONS: "
            -Dspring.data.mongodb.host=mongodb
            -Dspring.data.mongodb.port=27017
            "
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.did-mapping-ms.loadbalancer.server.port=8080"
      - "traefik.http.routers.did-mapping-ms.rule=Host(`mapping.did.alfresco.dev.sphereon.com`)"
      - "traefik.http.routers.did-mapping-ms.entrypoints=websecure"
      - "traefik.http.routers.did-mapping-ms.tls.certresolver=myresolver"
      - "traefik.http.middlewares.did-mapping-ms.redirectscheme.scheme=https"
      - "traefik.http.middlewares.did-mapping-msz.redirectscheme.permanent=true"

  # A microservice that handles uPort integration
  did-transports-ms:
    image: 718258401100.dkr.ecr.eu-west-1.amazonaws.com/sphereon-alfresco/did-transports-ms
    mem_limit: 512m
    ports:
      - 3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.did-transports-ms.loadbalancer.server.port=3000"
      - "traefik.http.routers.did-transports-ms.rule=Host(`transports.did.alfresco.dev.sphereon.com`)"
      - "traefik.http.routers.did-transports-ms.entrypoints=websecure"
      - "traefik.http.routers.did-transports-ms.tls.certresolver=myresolver"
      - "traefik.http.middlewares.did-transports-ms.redirectscheme.scheme=https"
      - "traefik.http.middlewares.did-transports-ms.redirectscheme.permanent=true"

volumes:
  mongodb_data_container:
  alf_data_container: